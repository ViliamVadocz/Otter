import sys
from typing import List, Tuple

from tuner import Tuner

sys.path.insert(1, "../../src")

import utils.const as const

# fmt: off
boost_data: List[Tuple[float, float]] = [(0.0, -0.010999999940395355, 0.190185546875), (0.008333206176757812, 21.58099937438965, 0.3701171875), (0.016666412353515625, 42.990997314453125, 0.72998046875), (0.024999618530273438, 64.21099853515625, 1.27001953125), (0.03333282470703125, 85.2509994506836, 1.97998046875), (0.04166698455810547, 106.11100006103516, 2.860107421875), (0.05000019073486328, 126.79100036621094, 3.920166015625), (0.058333396911621094, 147.30101013183594, 5.150146484375), (0.0666666030883789, 167.63099670410156, 6.550048828125), (0.07499980926513672, 187.79100036621094, 8.1201171875), (0.08333301544189453, 207.77099609375, 9.85009765625), (0.09166622161865234, 227.5810089111328, 11.75), (0.10000038146972656, 247.22100830078125, 13.81005859375), (0.10833358764648438, 266.6910095214844, 16.030029296875), (0.11666679382324219, 286.0010070800781, 18.41015625), (0.125, 305.1409912109375, 20.949951171875), (0.1333332061767578, 324.1210021972656, 23.650146484375), (0.14166641235351562, 342.9309997558594, 26.510009765625), (0.14999961853027344, 361.58099365234375, 29.52001953125), (0.15833282470703125, 380.07098388671875, 32.690185546875), (0.16666698455810547, 398.4110107421875, 36.010009765625), (0.17500019073486328, 416.59100341796875, 39.47998046875), (0.1833333969116211, 434.6109924316406, 43.10009765625), (0.1916666030883789, 452.4809875488281, 46.8701171875), (0.19999980926513672, 470.1910095214844, 50.7900390625), (0.20833301544189453, 487.7510070800781, 54.85009765625), (0.21666622161865234, 505.1610107421875, 59.06005859375), (0.22500038146972656, 522.4209594726562, 63.41015625), (0.23333358764648438, 539.5409545898438, 67.91015625), (0.2416667938232422, 556.510986328125, 72.550048828125), (0.25, 573.3309936523438, 77.330078125), (0.2583332061767578, 590.010986328125, 82.25), (0.2666664123535156, 606.5509643554688, 87.300048828125), (0.27499961853027344, 622.9409790039062, 92.489990234375), (0.28333282470703125, 639.1909790039062, 97.820068359375), (0.29166698455810547, 655.3009643554688, 103.280029296875), (0.3000001907348633, 671.2809448242188, 108.8701171875), (0.3083333969116211, 687.1209716796875, 114.60009765625), (0.3166666030883789, 702.8209838867188, 120.4599609375), (0.3249998092651367, 718.3909301757812, 126.449951171875), (0.33333301544189453, 733.8309326171875, 132.570068359375), (0.34166622161865234, 749.1309814453125, 138.81005859375), (0.35000038146972656, 764.3009643554688, 145.18017578125), (0.3583335876464844, 779.3409423828125, 151.670166015625), (0.3666667938232422, 794.2509765625, 158.2900390625), (0.375, 809.0409545898438, 165.030029296875), (0.3833332061767578, 823.700927734375, 171.89013671875), (0.3916664123535156, 838.23095703125, 178.880126953125), (0.39999961853027344, 852.6409301757812, 185.989990234375), (0.40833282470703125, 866.9209594726562, 193.2099609375), (0.41666698455810547, 881.0809326171875, 200.550048828125), (0.4250001907348633, 895.1209716796875, 208.010009765625), (0.4333333969116211, 909.0409545898438, 215.590087890625), (0.4416666030883789, 922.8409423828125, 223.280029296875), (0.4499998092651367, 936.5209350585938, 231.080078125), (0.45833301544189453, 950.0909423828125, 239.0), (0.46666622161865234, 963.5409545898438, 247.030029296875), (0.47500038146972656, 976.8709716796875, 255.170166015625), (0.4833335876464844, 990.0909423828125, 263.420166015625), (0.4916667938232422, 1003.200927734375, 271.780029296875), (0.5, 1016.1909790039062, 280.25), (0.5083332061767578, 1029.0709228515625, 288.830078125), (0.5166664123535156, 1041.8409423828125, 297.510009765625), (0.5249996185302734, 1054.5009765625, 306.300048828125), (0.5333328247070312, 1067.0509033203125, 315.18994140625), (0.5416669845581055, 1079.5009765625, 324.18994140625), (0.5500001907348633, 1091.8409423828125, 333.2900390625), (0.5583333969116211, 1104.0709228515625, 342.489990234375), (0.5666666030883789, 1116.200927734375, 351.7900390625), (0.5749998092651367, 1128.23095703125, 361.18994140625), (0.5833330154418945, 1140.1510009765625, 370.68994140625), (0.5916662216186523, 1151.970947265625, 380.2900390625), (0.6000003814697266, 1163.69091796875, 389.989990234375), (0.6083335876464844, 1175.3109130859375, 399.780029296875), (0.6166667938232422, 1186.8309326171875, 409.670166015625), (0.625, 1198.2509765625, 419.66015625), (0.6333332061767578, 1209.5709228515625, 429.739990234375), (0.6416664123535156, 1220.8009033203125, 439.91015625), (0.6499996185302734, 1231.930908203125, 450.18017578125), (0.6583328247070312, 1242.9609375, 460.5400390625), (0.6666669845581055, 1253.9010009765625, 470.989990234375), (0.6750001907348633, 1264.7509765625, 481.530029296875), (0.6833333969116211, 1275.5009765625, 492.16015625), (0.6916666030883789, 1286.160888671875, 502.880126953125), (0.6999998092651367, 1296.73095703125, 513.68994140625), (0.7083330154418945, 1307.2109375, 524.580078125), (0.7166662216186523, 1317.6009521484375, 535.56005859375), (0.7250003814697266, 1327.9010009765625, 546.630126953125), (0.7333335876464844, 1338.1109619140625, 557.780029296875), (0.7416667938232422, 1348.23095703125, 569.02001953125), (0.75, 1358.27099609375, 580.340087890625), (0.7583332061767578, 1368.220947265625, 591.739990234375), (0.7666664123535156, 1378.0909423828125, 603.219970703125), (0.7749996185302734, 1387.8709716796875, 614.7900390625), (0.7833328247070312, 1397.5709228515625, 626.43994140625), (0.7916669845581055, 1407.180908203125, 638.170166015625), (0.8000001907348633, 1415.8209228515625, 649.969970703125), (0.8083333969116211, 1424.0809326171875, 661.840087890625), (0.8166666030883789, 1432.3409423828125, 673.780029296875), (0.8249998092651367, 1440.6009521484375, 685.7900390625), (0.8333330154418945, 1448.8609619140625, 697.860107421875), (0.8416662216186523, 1457.1209716796875, 710.0), (0.8500003814697266, 1465.3809814453125, 722.2099609375), (0.8583335876464844, 1473.6409912109375, 734.489990234375), (0.8666667938232422, 1481.9010009765625, 746.840087890625), (0.875, 1490.160888671875, 759.260009765625), (0.8833332061767578, 1498.4208984375, 771.75), (0.8916664123535156, 1506.680908203125, 784.31005859375), (0.8999996185302734, 1514.94091796875, 796.929931640625), (0.9083328247070312, 1523.200927734375, 809.6201171875), (0.9166669845581055, 1531.4609375, 822.380126953125), (0.9250001907348633, 1539.720947265625, 835.2099609375), (0.9333333969116211, 1547.98095703125, 848.110107421875), (0.9416666030883789, 1556.240966796875, 861.080078125), (0.9499998092651367, 1564.5009765625, 874.1201171875), (0.9583330154418945, 1572.760986328125, 887.22998046875), (0.9666662216186523, 1581.02099609375, 900.41015625), (0.9750003814697266, 1589.2808837890625, 913.650146484375), (0.9833335876464844, 1597.5408935546875, 926.9599609375), (0.9916667938232422, 1605.8009033203125, 940.340087890625), (1.0, 1614.0609130859375, 953.7900390625), (1.0083332061767578, 1622.3209228515625, 967.31005859375), (1.0166664123535156, 1630.5809326171875, 980.9000244140625), (1.0249996185302734, 1638.8409423828125, 994.56005859375), (1.0333328247070312, 1647.1009521484375, 1008.2900390625), (1.0416669845581055, 1655.3609619140625, 1022.080078125), (1.0500001907348633, 1663.6209716796875, 1035.9400634765625), (1.058333396911621, 1671.8809814453125, 1049.8699951171875), (1.066666603088379, 1680.1409912109375, 1063.8699951171875), (1.0749998092651367, 1688.40087890625, 1077.9400634765625), (1.0833330154418945, 1696.660888671875, 1092.080078125), (1.0916662216186523, 1704.9208984375, 1106.2900390625), (1.1000003814697266, 1713.180908203125, 1120.570068359375), (1.1083335876464844, 1721.44091796875, 1134.9200439453125), (1.1166667938232422, 1729.700927734375, 1149.330078125), (1.125, 1737.9609375, 1163.81005859375), (1.1333332061767578, 1746.220947265625, 1178.3599853515625), (1.1416664123535156, 1754.48095703125, 1192.97998046875), (1.1499996185302734, 1762.740966796875, 1207.6700439453125), (1.1583328247070312, 1771.0009765625, 1222.4300537109375), (1.1666669845581055, 1779.260986328125, 1237.260009765625), (1.1750001907348633, 1787.52099609375, 1252.1600341796875), (1.183333396911621, 1795.7808837890625, 1267.1300048828125), (1.191666603088379, 1804.0408935546875, 1282.1600341796875), (1.1999998092651367, 1812.3009033203125, 1297.260009765625), (1.2083330154418945, 1820.5609130859375, 1312.4300537109375), (1.2166662216186523, 1828.8209228515625, 1327.6700439453125), (1.2250003814697266, 1837.0809326171875, 1342.97998046875), (1.2333335876464844, 1845.3409423828125, 1358.3599853515625), (1.2416667938232422, 1853.6009521484375, 1373.81005859375), (1.25, 1861.8609619140625, 1389.330078125), (1.2583332061767578, 1870.1209716796875, 1404.9100341796875), (1.2666664123535156, 1878.3809814453125, 1420.56005859375), (1.2749996185302734, 1886.6409912109375, 1436.280029296875), (1.2833328247070312, 1894.90087890625, 1452.070068359375), (1.2916669845581055, 1903.160888671875, 1467.9300537109375), (1.3000001907348633, 1911.4208984375, 1483.8599853515625), (1.308333396911621, 1919.680908203125, 1499.8599853515625), (1.316666603088379, 1927.94091796875, 1515.9300537109375), (1.3249998092651367, 1936.200927734375, 1532.070068359375), (1.3333330154418945, 1944.4609375, 1548.27001953125), (1.3416662216186523, 1952.720947265625, 1564.5400390625), (1.3500003814697266, 1960.98095703125, 1580.8800048828125), (1.3583335876464844, 1969.240966796875, 1597.2900390625), (1.3666667938232422, 1977.5009765625, 1613.77001953125), (1.375, 1985.760986328125, 1630.320068359375), (1.3833332061767578, 1994.0208740234375, 1646.9400634765625), (1.3916664123535156, 2002.2808837890625, 1663.6300048828125), (1.3999996185302734, 2010.5408935546875, 1680.3800048828125), (1.4083328247070312, 2018.8009033203125, 1697.2000732421875), (1.4166669845581055, 2027.0609130859375, 1714.090087890625), (1.4250001907348633, 2035.3209228515625, 1731.050048828125), (1.433333396911621, 2043.5809326171875, 1748.080078125), (1.441666603088379, 2051.8408203125, 1765.1800537109375), (1.4499998092651367, 2060.100830078125, 1782.3499755859375), (1.4583330154418945, 2068.36083984375, 1799.5899658203125), (1.4666662216186523, 2076.620849609375, 1816.9000244140625), (1.4750003814697266, 2084.880859375, 1834.27001953125), (1.4833335876464844, 2093.140869140625, 1851.7100830078125), (1.4916667938232422, 2101.40087890625, 1869.219970703125), (1.5, 2109.660888671875, 1886.800048828125), (1.5083332061767578, 2117.9208984375, 1904.4500732421875), (1.5166664123535156, 2126.180908203125, 1922.1700439453125), (1.5249996185302734, 2134.44091796875, 1939.9600830078125), (1.5333328247070312, 2142.700927734375, 1957.820068359375), (1.5416669845581055, 2150.9609375, 1975.739990234375), (1.5500001907348633, 2159.220947265625, 1993.7300415039062), (1.558333396911621, 2167.48095703125, 2011.7900390625), (1.566666603088379, 2175.740966796875, 2029.9200439453125), (1.5749998092651367, 2184.0009765625, 2048.1199951171875), (1.5833330154418945, 2192.260986328125, 2066.3900146484375), (1.5916662216186523, 2200.52099609375, 2084.7300415039062), (1.6000003814697266, 2208.781005859375, 2103.1400146484375), (1.6083335876464844, 2217.041015625, 2121.6199951171875), (1.6166667938232422, 2225.301025390625, 2140.1600341796875), (1.625, 2233.56103515625, 2158.77001953125), (1.6333332061767578, 2241.821044921875, 2177.4500122070312), (1.6416664123535156, 2250.080810546875, 2196.2000122070312), (1.6499996185302734, 2258.3408203125, 2215.02001953125), (1.6583328247070312, 2266.600830078125, 2233.9100341796875), (1.6666669845581055, 2274.86083984375, 2252.8699951171875), (1.6750001907348633, 2283.120849609375, 2271.9000244140625), (1.683333396911621, 2291.380859375, 2290.989990234375), (1.691666603088379, 2299.640869140625, 2310.1500244140625), (1.6999998092651367, 2299.990966796875, 2329.3800048828125), (1.7083330154418945, 2300.0009765625, 2348.6199951171875), (1.7166662216186523, 2300.0009765625, 2367.8599853515625), (1.7250003814697266, 2300.0009765625, 2387.1000366210938), (1.7333335876464844, 2300.0009765625, 2406.3400268554688), (1.7416667938232422, 2300.0009765625, 2425.5800170898438), (1.75, 2300.0009765625, 2444.8200073242188), (1.7583332061767578, 2300.0009765625, 2464.0599975585938), (1.7666664123535156, 2300.0009765625, 2483.2999877929688), (1.7749996185302734, 2300.0009765625, 2502.540008544922), (1.7833328247070312, 2300.0009765625, 2521.779998779297), (1.7916669845581055, 2300.0009765625, 2541.02001953125)]
throttle_data: List[Tuple[float, float]] = [(0.0, -0.010999999940395355, 0.260009765625), (0.008333206176757812, 13.321000099182129, 0.3701171875), (0.016666412353515625, 26.540998458862305, 0.590087890625), (0.02500009536743164, 39.64099884033203, 0.920166015625), (0.03333330154418945, 52.63099670410156, 1.360107421875), (0.041666507720947266, 65.51100158691406, 1.91015625), (0.04999971389770508, 78.28099822998047, 2.56005859375), (0.058333396911621094, 90.94099426269531, 3.320068359375), (0.0666666030883789, 103.49099731445312, 4.18017578125), (0.07499980926513672, 115.93099975585938, 5.150146484375), (0.08333301544189453, 128.27101135253906, 6.219970703125), (0.09166669845581055, 140.50100708007812, 7.39013671875), (0.09999990463256836, 152.63099670410156, 8.66015625), (0.10833311080932617, 164.6510009765625, 10.030029296875), (0.11666631698608398, 176.5709991455078, 11.5), (0.125, 188.39100646972656, 13.070068359375), (0.1333332061767578, 200.1009979248047, 14.739990234375), (0.14166641235351562, 211.71099853515625, 16.5), (0.15833330154418945, 234.64100646972656, 20.320068359375), (0.16666650772094727, 245.96099853515625, 22.3701171875), (0.17499971389770508, 257.1809997558594, 24.510009765625), (0.1833333969116211, 268.3110046386719, 26.75), (0.1916666030883789, 279.34100341796875, 29.080078125), (0.19999980926513672, 290.281005859375, 31.5), (0.20833301544189453, 301.1210021972656, 34.010009765625), (0.21666669845581055, 311.8710021972656, 36.610107421875), (0.22499990463256836, 322.531005859375, 39.300048828125), (0.23333311080932617, 333.09100341796875, 42.080078125), (0.24166631698608398, 343.5610046386719, 44.940185546875), (0.25, 353.9410095214844, 47.89013671875), (0.2583332061767578, 364.2409973144531, 50.93017578125), (0.2666664123535156, 374.45098876953125, 54.050048828125), (0.27500009536743164, 384.57098388671875, 57.260009765625), (0.28333330154418945, 394.60101318359375, 60.550048828125), (0.29166650772094727, 404.5509948730469, 63.920166015625), (0.2999997138977051, 414.4110107421875, 67.3701171875), (0.3083333969116211, 424.1910095214844, 70.91015625), (0.3166666030883789, 433.8810119628906, 74.530029296875), (0.3249998092651367, 443.4909973144531, 78.22998046875), (0.33333301544189453, 453.02099609375, 82.010009765625), (0.34166669845581055, 462.47100830078125, 85.860107421875), (0.34999990463256836, 471.84100341796875, 89.7900390625), (0.35833311080932617, 481.1309814453125, 93.800048828125), (0.366666316986084, 490.34100341796875, 97.89013671875), (0.375, 499.47100830078125, 102.050048828125), (0.3833332061767578, 508.52099609375, 106.2900390625), (0.3916664123535156, 517.490966796875, 110.60009765625), (0.40000009536743164, 526.3809814453125, 114.989990234375), (0.40833330154418945, 535.2009887695312, 119.449951171875), (0.41666650772094727, 543.9409790039062, 123.97998046875), (0.4249997138977051, 552.6109619140625, 128.590087890625), (0.4333333969116211, 561.2009887695312, 133.27001953125), (0.4416666030883789, 569.720947265625, 138.02001953125), (0.4499998092651367, 578.1709594726562, 142.840087890625), (0.45833301544189453, 586.5409545898438, 147.72998046875), (0.46666669845581055, 594.8409423828125, 152.690185546875), (0.47499990463256836, 603.0709838867188, 157.719970703125), (0.48333311080932617, 611.23095703125, 162.81005859375), (0.491666316986084, 619.3209838867188, 167.969970703125), (0.5, 627.3409423828125, 173.199951171875), (0.5083332061767578, 635.2909545898438, 178.489990234375), (0.5166664123535156, 643.1709594726562, 183.85009765625), (0.5250000953674316, 650.990966796875, 189.280029296875), (0.5333333015441895, 658.740966796875, 194.77001953125), (0.5416665077209473, 666.4209594726562, 200.320068359375), (0.5499997138977051, 674.0409545898438, 205.93994140625), (0.5583333969116211, 681.5909423828125, 211.6201171875), (0.5666666030883789, 689.0809326171875, 217.360107421875), (0.5749998092651367, 696.5009765625, 223.16015625), (0.5833330154418945, 703.8609619140625, 229.030029296875), (0.5916666984558105, 711.1609497070312, 234.9599609375), (0.5999999046325684, 718.3909301757812, 240.949951171875), (0.6083331108093262, 725.5609741210938, 247.0), (0.616666316986084, 732.6709594726562, 253.110107421875), (0.625, 739.720947265625, 259.27001953125), (0.6333332061767578, 746.7109375, 265.489990234375), (0.6416664123535156, 753.6409301757812, 271.77001953125), (0.6500000953674316, 760.510986328125, 278.110107421875), (0.6583333015441895, 767.3209838867188, 284.5), (0.6666665077209473, 774.0709838867188, 290.949951171875), (0.6749997138977051, 780.760986328125, 297.4599609375), (0.6833333969116211, 787.4009399414062, 304.02001953125), (0.6916666030883789, 793.98095703125, 310.64013671875), (0.6999998092651367, 800.5009765625, 317.31005859375), (0.7083330154418945, 806.970947265625, 324.0400390625), (0.7166666984558105, 813.3809814453125, 330.820068359375), (0.7249999046325684, 819.740966796875, 337.650146484375), (0.7333331108093262, 826.0409545898438, 344.530029296875), (0.741666316986084, 832.2909545898438, 351.469970703125), (0.75, 838.490966796875, 358.4599609375), (0.7583332061767578, 844.6309814453125, 365.5), (0.7666664123535156, 850.720947265625, 372.590087890625), (0.7750000953674316, 856.760986328125, 379.72998046875), (0.7833333015441895, 862.7509765625, 386.920166015625), (0.7916665077209473, 868.6809692382812, 394.16015625), (0.7999997138977051, 874.5609741210938, 401.449951171875), (0.8083333969116211, 880.3909301757812, 408.7900390625), (0.8166666030883789, 886.1709594726562, 416.170166015625), (0.8249998092651367, 891.9009399414062, 423.60009765625), (0.8333330154418945, 897.5809326171875, 431.080078125), (0.8416666984558105, 903.220947265625, 438.610107421875), (0.8499999046325684, 908.8109741210938, 446.18017578125), (0.8583331108093262, 914.3509521484375, 453.800048828125), (0.866666316986084, 919.8409423828125, 461.469970703125), (0.875, 925.2909545898438, 469.18017578125), (0.8833332061767578, 930.6909790039062, 476.93994140625), (0.8916664123535156, 936.0409545898438, 484.739990234375), (0.9000000953674316, 941.3509521484375, 492.580078125), (0.9083333015441895, 946.6109619140625, 500.469970703125), (0.9166665077209473, 951.8309326171875, 508.400146484375), (0.9249997138977051, 957.0009765625, 516.380126953125), (0.9333333969116211, 962.1309814453125, 524.400146484375), (0.9416666030883789, 967.2109375, 532.4599609375), (0.9499998092651367, 972.2509765625, 540.56005859375), (0.9583330154418945, 977.2509765625, 548.699951171875), (0.9666666984558105, 982.200927734375, 556.89013671875), (0.9749999046325684, 987.1109619140625, 565.1201171875), (0.9833331108093262, 991.98095703125, 573.39013671875), (0.991666316986084, 996.8109741210938, 581.699951171875), (1.0, 1001.6009521484375, 590.050048828125), (1.0083332061767578, 1006.3409423828125, 598.43994140625), (1.0166664123535156, 1011.0409545898438, 606.8701171875), (1.0250000953674316, 1015.700927734375, 615.330078125), (1.0333333015441895, 1020.3209838867188, 623.830078125), (1.0416665077209473, 1024.9010009765625, 632.3701171875), (1.049999713897705, 1029.450927734375, 640.949951171875), (1.058333396911621, 1033.9609375, 649.570068359375), (1.066666603088379, 1038.430908203125, 658.219970703125), (1.0749998092651367, 1042.8609619140625, 666.91015625), (1.0833330154418945, 1047.2509765625, 675.64013671875), (1.0916666984558105, 1051.6009521484375, 684.400146484375), (1.0999999046325684, 1055.9208984375, 693.199951171875), (1.1083331108093262, 1060.200927734375, 702.030029296875), (1.116666316986084, 1064.44091796875, 710.900146484375), (1.125, 1068.6510009765625, 719.81005859375), (1.1333332061767578, 1072.8209228515625, 728.75), (1.1416664123535156, 1076.950927734375, 737.719970703125), (1.1583328247070312, 1085.1109619140625, 755.77001953125), (1.1666669845581055, 1089.1409912109375, 764.85009765625), (1.1750001907348633, 1093.1309814453125, 773.9599609375), (1.183333396911621, 1097.0909423828125, 783.10009765625), (1.191666603088379, 1101.02099609375, 792.280029296875), (1.1999998092651367, 1104.9110107421875, 801.489990234375), (1.2083330154418945, 1108.77099609375, 810.72998046875), (1.2166662216186523, 1112.6009521484375, 820.0), (1.2249994277954102, 1116.3909912109375, 829.300048828125), (1.2333335876464844, 1120.1510009765625, 838.630126953125), (1.2416667938232422, 1123.8809814453125, 848.0), (1.25, 1127.5809326171875, 857.400146484375), (1.2583332061767578, 1131.240966796875, 866.830078125), (1.2666664123535156, 1134.8709716796875, 876.2900390625), (1.2749996185302734, 1138.470947265625, 885.780029296875), (1.2833328247070312, 1142.0408935546875, 895.300048828125), (1.2916669845581055, 1145.5809326171875, 904.85009765625), (1.3000001907348633, 1149.0909423828125, 914.429931640625), (1.308333396911621, 1152.5709228515625, 924.030029296875), (1.316666603088379, 1156.02099609375, 933.66015625), (1.3249998092651367, 1159.44091796875, 943.320068359375), (1.3333330154418945, 1162.8309326171875, 953.010009765625), (1.3416662216186523, 1166.19091796875, 962.7301025390625), (1.3499994277954102, 1169.52099609375, 972.4801025390625), (1.3583335876464844, 1172.8309326171875, 982.25), (1.3666667938232422, 1176.1109619140625, 992.050048828125), (1.375, 1179.3609619140625, 1001.8800048828125), (1.3833332061767578, 1182.5809326171875, 1011.739990234375), (1.3916664123535156, 1185.77099609375, 1021.6199951171875), (1.3999996185302734, 1188.94091796875, 1031.530029296875), (1.4083328247070312, 1192.0809326171875, 1041.4600830078125), (1.4166669845581055, 1195.19091796875, 1051.4200439453125), (1.4250001907348633, 1198.281005859375, 1061.4100341796875), (1.433333396911621, 1201.3409423828125, 1071.4200439453125), (1.441666603088379, 1204.3709716796875, 1081.4600830078125), (1.4499998092651367, 1207.3809814453125, 1091.52001953125), (1.4583330154418945, 1210.3609619140625, 1101.6099853515625), (1.4666662216186523, 1213.3209228515625, 1111.7200927734375), (1.4749994277954102, 1216.2509765625, 1121.8599853515625), (1.4833335876464844, 1219.1510009765625, 1132.02001953125), (1.4916667938232422, 1222.031005859375, 1142.2000732421875), (1.5, 1224.8909912109375, 1152.4100341796875), (1.5083332061767578, 1227.720947265625, 1162.6400146484375), (1.5166664123535156, 1230.531005859375, 1172.8900146484375), (1.5249996185302734, 1233.3109130859375, 1183.1700439453125), (1.5333328247070312, 1236.0709228515625, 1193.4700927734375), (1.5416669845581055, 1238.8009033203125, 1203.7900390625), (1.5500001907348633, 1241.510986328125, 1214.1400146484375), (1.558333396911621, 1244.200927734375, 1224.510009765625), (1.566666603088379, 1246.8709716796875, 1234.9000244140625), (1.5749998092651367, 1249.510986328125, 1245.31005859375), (1.5833330154418945, 1252.1309814453125, 1255.739990234375), (1.5916662216186523, 1254.73095703125, 1266.2000732421875), (1.5999994277954102, 1257.3109130859375, 1276.6800537109375), (1.6083335876464844, 1259.8609619140625, 1287.1800537109375), (1.6166667938232422, 1262.3909912109375, 1297.7000732421875), (1.625, 1264.9010009765625, 1308.239990234375), (1.6333332061767578, 1267.3909912109375, 1318.800048828125), (1.6416664123535156, 1269.8609619140625, 1329.3800048828125), (1.6499996185302734, 1272.3109130859375, 1339.97998046875), (1.6583328247070312, 1274.73095703125, 1350.60009765625), (1.6666669845581055, 1277.1309814453125, 1361.239990234375), (1.6750001907348633, 1279.510986328125, 1371.9000244140625), (1.683333396911621, 1281.8709716796875, 1382.580078125), (1.691666603088379, 1284.2109375, 1393.280029296875), (1.6999998092651367, 1286.531005859375, 1404.0), (1.7083330154418945, 1288.8309326171875, 1414.739990234375), (1.7166662216186523, 1291.1109619140625, 1425.5), (1.7249994277954102, 1293.3709716796875, 1436.280029296875), (1.7333335876464844, 1295.6109619140625, 1447.080078125), (1.7416667938232422, 1297.8309326171875, 1457.9000244140625), (1.75, 1300.0408935546875, 1468.72998046875), (1.7583332061767578, 1302.23095703125, 1479.580078125), (1.7666664123535156, 1304.4010009765625, 1490.4500732421875), (1.7749996185302734, 1306.5509033203125, 1501.340087890625), (1.7833328247070312, 1308.680908203125, 1512.25), (1.7916669845581055, 1310.7908935546875, 1523.1700439453125)]
# fmt: on

for i in range(len(boost_data)):
    if boost_data[i][1] >= const.MAX_CAR_SPEED:
        boost_data = boost_data[:i]
        break
for i in range(len(throttle_data)):
    if throttle_data[i][1] >= const.MAX_NO_BOOST_SPEED:
        throttle_data = throttle_data[:i]
        break


def calc(x: float, a, b, c) -> float:
    return a * x + b * x ** 2 + c * x ** 3


# def calc(x: float, a, b, c) -> float:
#     return (x + a) ** 0.5 * b + c


def time_to_speed(speed: float, boost: bool) -> float:
    if boost:
        return (
            2620.2696820183323 * speed
            + -1368.2246940174318 * speed ** 2
            + 370.67380147518276 * speed ** 3
        )
    return (
        1568.3371768407985 * speed
        + -691.2054831674493 * speed ** 2
        + 126.01793019670737 * speed ** 3
    )


def distance_to_time(time: float, boost: bool) -> float:
    if boost:
        return (
            time + 48.48140452579765
        ) ** 0.5 * 0.03858075642237755 + -0.20622521650405476
    return (
        time + 43.41414902262599
    ) ** 0.5 * 0.050975993945055816 + -0.2639051435040556


def speed_to_distance(speed: float, boost: bool) -> float:
    if boost:
        return (
            -0.07267335021447095 * speed
            + 0.0002507343310505393 * speed ** 2
            + 9.794747003917977e-08 * speed ** 3
        )
    return (
        0.3564224344073551 * speed
        + -0.0008681746346982432 * speed ** 2
        + 1.105547777450585e-06 * speed ** 3
    )


def get_time_to_reach_distance(distance: float, start_speed: float, boost: float):
    boost_time: float = boost / const.BOOST_USAGE
    print(boost_time)

    boost_start_distance: float = speed_to_distance(start_speed, True)
    boost_start_time: float = distance_to_time(boost_start_distance, True)
    reach_max_speed: bool = distance_to_time(
        speed_to_distance(const.MAX_CAR_SPEED, True), True
    ) <= (boost_start_time + boost_time)
    print(
        str(distance_to_time(speed_to_distance(const.MAX_CAR_SPEED, True), True))
        + " <= "
        + str(boost_start_time + boost_time)
    )

    # Reach max speed.
    if reach_max_speed:
        distance += boost_start_distance
        # assert distance >= boost_data[-1][2]
        boost_max_time: float = max(
            0, distance - boost_data[-1][2]
        ) / const.MAX_CAR_SPEED
        print("yo 0 (" + str(distance - boost_data[-1][2]) + ")")
        return (
            distance_to_time(min(distance, boost_data[-1][2]), True)
            - boost_start_time
            + boost_max_time
        )

    # Run out of boost beyond throttle max speed.
    throttle_start_speed: float = time_to_speed(boost_start_time + boost_time, True)
    if throttle_start_speed >= const.MAX_NO_BOOST_SPEED:
        distance += boost_start_distance - speed_to_distance(throttle_start_speed, True)
        print(
            "yo 1 ("
            + str(boost_start_distance - speed_to_distance(throttle_start_speed, True))
            + ")"
        )
        return boost_time + distance / throttle_start_speed

    # Reach throttle max speed.
    throttle_start_distance: float = speed_to_distance(throttle_start_speed, False)
    throttle_start_time: float = distance_to_time(throttle_start_distance, False)
    distance += throttle_start_distance
    throttle_to_max_time: float = distance_to_time(
        min(throttle_data[-1][2], distance), False
    ) - throttle_start_time
    throttle_after_max_time: float = max(
        0, distance - throttle_data[-1][2]
    ) / const.MAX_NO_BOOST_SPEED
    print(throttle_start_time)
    print("yo 2")
    return boost_time + throttle_to_max_time + throttle_after_max_time


if __name__ == "__main__":
    # recorded: Tuple[List[float], List[float]] = ([], [])
    # use_data = throttle_data[:]
    # for i in range(len(use_data)):
    #     recorded[0].append(max(0, use_data[i][0]))
    #     recorded[1].append(max(0, use_data[i][1]))

    from matplotlib.pyplot import plot, show

    data = []
    for speed in range(0, 2301, 2300 // 100):
        time: float = get_time_to_reach_distance(4600, speed, 100)
        print(str(speed) + "uu: " + str(round(time, 3)) + "s\n")
        data.append((speed, time))
    plot(*zip(*data))
    show()

    # from scipy.optimize import curve_fit
    #
    # curve = curve_fit(calc, *recorded)
    # variables = curve[0].tolist()
    # print(variables)
    # tuner: Tuner = Tuner(recorded, calc, variables)
    # tuner.graph()
